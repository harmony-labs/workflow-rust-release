name: Build and Release Rust Binaries

on:
  workflow_call:
    inputs:
      binary_name:
        description: "The name of the binary/executable (optional for library crates)"
        required: false
        type: string
      crate_name:
        description: "The name of the crate (for crates.io publishing)"
        required: false
        type: string
      homebrew_tap:
        description: "The Homebrew tap repository (org/repo)"
        required: false
        type: string
      scoop_bucket:
        description: "The Scoop bucket repository (org/repo)"
        required: false
        type: string
      platforms:
        description: "JSON array of platforms for the matrix"
        required: false
        type: string
        default: |
          [
            {"os-name": "FreeBSD-x86_64", "runs-on": "ubuntu-24.04", "target": "x86_64-unknown-freebsd"},
            {"os-name": "macOS-x86_64", "runs-on": "macOS-latest", "target": "x86_64-apple-darwin"},
            {"os-name": "macOS-aarch64", "runs-on": "macOS-latest", "target": "aarch64-apple-darwin"},
            {"os-name": "Linux-x86_64", "runs-on": "ubuntu-24.04", "target": "x86_64-unknown-linux-musl"},
            {"os-name": "Linux-arm", "runs-on": "ubuntu-24.04", "target": "arm-unknown-linux-musleabi"},
            {"os-name": "Linux-i686", "runs-on": "ubuntu-24.04", "target": "i686-unknown-linux-musl"},
            {"os-name": "Windows-i686", "runs-on": "windows-latest", "target": "i686-pc-windows-msvc"},
            {"os-name": "Windows-aarch64", "runs-on": "windows-latest", "target": "aarch64-pc-windows-msvc"},
            {"os-name": "Windows-x86_64", "runs-on": "windows-latest", "target": "x86_64-pc-windows-msvc"}
          ]
    secrets:
      CARGO_REGISTRY_TOKEN:
        required: false
      HOMEBREW_GITHUB_TOKEN:
        required: false
      SCOOP_GITHUB_TOKEN:
        required: false

permissions:
  contents: write

jobs:
  publish:
    if: ${{ inputs.binary_name != '' }}
    name: Build and Publish
    runs-on: ${{ matrix.platform.runs-on }}
    strategy:
      matrix:
        platform: ${{ fromJson(inputs.platforms) }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v1
        with:
          command: build
          target: ${{ matrix.platform.target }}
          args: "--release"
          strip: true

      - name: Publish artifacts and release
        uses: houseabsolute/actions-rust-release@v0
        with:
          executable-name: ${{ inputs.binary_name }}
          target: ${{ matrix.platform.target }}
          changes-file: ""
  # --- Additional jobs for full Rust CLI release automation ---

  publish-crate:
    if: ${{ inputs.crate_name != '' }}
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Publish to crates.io
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          if [ -z "${CARGO_REGISTRY_TOKEN}" ]; then
            echo "CARGO_REGISTRY_TOKEN is not set. Skipping crates.io publish."
            exit 0
          fi
          cargo publish --token $CARGO_REGISTRY_TOKEN --no-verify

  update-homebrew:
    if: ${{ inputs.homebrew_tap != '' }}
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: Update Homebrew formula and open PR
        env:
          GITHUB_TOKEN: ${{ secrets.HOMEBREW_GITHUB_TOKEN }}
        run: |
          if [ -z "${GITHUB_TOKEN}" ]; then
            echo "HOMEBREW_GITHUB_TOKEN is not set. Skipping Homebrew update."
            exit 0
          fi
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          gh auth login --with-token <<< "${GITHUB_TOKEN}"
          gh repo clone ${{ inputs.homebrew_tap }} tap-repo
          cd tap-repo
          # TODO: Update the formula file here (e.g., sed to update version/sha256/url)
          git add .
          git commit -m "Update formula for ${{ inputs.binary_name }} to new release"
          gh pr create --fill --title "Update formula for ${{ inputs.binary_name }}" --body "Automated update for new release"

  update-scoop:
    if: ${{ inputs.scoop_bucket != '' }}
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: Update Scoop manifest and open PR
        env:
          GITHUB_TOKEN: ${{ secrets.SCOOP_GITHUB_TOKEN }}
        run: |
          if [ -z "${GITHUB_TOKEN}" ]; then
            echo "SCOOP_GITHUB_TOKEN is not set. Skipping Scoop update."
            exit 0
          fi
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          gh auth login --with-token <<< "${GITHUB_TOKEN}"
          gh repo clone ${{ inputs.scoop_bucket }} scoop-bucket
          cd scoop-bucket
          # TODO: Update the manifest file here (e.g., jq or sed to update version/hash/url)
          git add .
          git commit -m "Update manifest for ${{ inputs.binary_name }} to new release"
          gh pr create --fill --title "Update manifest for ${{ inputs.binary_name }}" --body "Automated update for new release"
